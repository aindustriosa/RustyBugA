[target.thumbv7m-none-eabi]
# Option program the board and start a GDB session for debugging. You need
# OpenOCD installed for this to work. Run `openocd` in a separate terminal
# before running `cargo run` using 'openocd -f openocd.cfg'
#runner = "gdb-multiarch -q -x openocd_debug.gdb"

# Option to flash the program onto the board using just OpenOCD
#runner = "./flash.sh"

runner = "../tools/upload.sh"

rustflags = [
  # LLD (shipped with the Rust toolchain) is used as the default linker
  "-C", "link-arg=-Tlink.x", "-g",

  # if you run into problems with LLD switch to the GNU linker by commenting out
  # this line
  # "-C", "linker=arm-none-eabi-ld",

  # if you need to link to pre-compiled C libraries provided by a C toolchain
  # use GCC as the linker by commenting out both lines above and then
  # uncommenting the three lines below
  # "-C", "linker=arm-none-eabi-gcc",
  # "-C", "link-arg=-Wl,-Tlink.x",
  # "-C", "link-arg=-nostartfiles",
]

[build]
target = "thumbv7m-none-eabi"    # Cortex-M3
